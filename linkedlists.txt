#week8
#linked lists
1.Linked List 
    -คือโครงสร้างที่ออกแบบมาเก็บข้อมูล โดยเก็บข้อมูลเป็นสาย 
    -array ก็เป็นโครงสร้างข้อมูลที่เรียงต่อกันคล้ายกันกับ linked list แต่ไม่ได้เหมือนกันสะทีเดียว
2. เกริ่นนำเกี่ยวกับ Structure
    Structure เป็นการกำหนดรูปแบบหรือโครงสร้างข้อมูลที่รวบรวมตัวแปรหลายชนิดเข้าด้วยกัน
    เช่น  struct food {
        char exp[12];
        char name[40];
        int ชิ้น;
        };
    2.1 การประกาศตัวแปรประเภท Structure
    - เราสามารถประกาศตัวแปร
        struct food fd;
    fd  เป็นตัวแปรที่มีโครงสร้างตาม struct food
    การเข้าถึงสามารถพิมพ์ . ฟิลด์ของ Structure ตามตัวอย่าง
    printf("%s\n",fd.exp);
    2.2 การประกาศตัวแปรพร้อมกำหนดค่าเริ่มต้นให้กับตัวแปรประเภท Structure
    - เราสามารถประกาศตัวแปรที่มีโครงสร้าง Structurewfh
        struct food fd = {"22/01/2000", "เบอร์เกอร์", 20};
    2.3 ตัวแปร pointer ไปยัง Structure
    - การเข้าถึงตัวแปร pointer สามารถทำได้ดังนี้
        struct student std, *p_fd;
        p_fd = &fd;
        printf("%s\n", (*p_fd).name);
        (*p_fd).ชิ้น = 20;
    2.4 การใช้ typedef
        typedef struct fd {
        char exp[12];
        char name[40];
        int ชิ้น;
        } fd;
    หรือ
        typedef struct {
        char exp[12];
        char name[40];
        int ชิ้น;
        } fd;
    2.5 Self-Referential Structures
        - struct ที่อ้างกลับไปยังโครงสร้างตนเอง
3.การเข้าถึงข้อมูลแต่ละตัวใน linked list (Traversal)
    เราจะปรับโค้ดก่อนหน้สด้วยการสร้าง linked list 3โหนด 
    และจะสร้างอีกฟังก์ชันขึ้นมาเพื่อเข้าถึงข้อมูลโดยการแสดงข้อมูลแต่ละตัวออกมาบนหน้าจอ
4.Doubly Linked List
โหนดที่อยู่ติดกันเชื่อมต่อกันด้วยลิงก์
5.Circular Linked List ลิงก์
    - Singly Circular Linked List
        ข้อมูลจะชี้ไปตัวถัดไปจนเป็นค่า  null แล้วตัวสุดท้ายชี้ไปตัวแรก
    - Doubly Circular Linked List
        ตัวแรกชี้ไปที่ตัวถัดไปและตัวหน้าสามารถชี้กลับหลังได้